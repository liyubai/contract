<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-lazy-init="true">

	<description>Spring公共配置文件</description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 本地开发环境配置 -->
				<value>classpath*:/application.local.properties</value>
			</list>
		</property>
	</bean>


	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.cauc.contract">
		<context:exclude-filter type="aspectj" expression="com.cauc.contract..*Exception"/>
		<context:exclude-filter type="aspectj" expression="com.cauc.contract.config..*"/>
		<context:exclude-filter type="aspectj" expression="com.cauc.contract.pojos..*"/>
	</context:component-scan>
	
	
	<!-- org.springframework.jdbc.datasource.DriverManagerDataSource -->
	<!-- 数据源配置-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="net.sourceforge.jtds.jdbc.Driver" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />


		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />	
		<!-- <property name="minPoolSize" value="2" />
        <property name="maxPoolSize" value="10" />
        <property name="initialPoolSize" value="2" />
        <property name="maxIdleTime" value="60" />
        <property name="acquireIncrement" value="10" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="idleConnectionTestPeriod" value="18000" />
        <property name="preferredTestQuery" value="select now()" />-->
        <!-- <property name="maxStatements" value="0"/> -->
	</bean>

	<!-- 数据源配置,在生产环境使用应用服务器的数据库连接池 -->
	<!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ShowcaseDB" /> -->

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	    
	    <property name="mappingLocations"> 
		<list> 
		<value>classpath:/com/cauc/contract/pojos/*.hbm.xml</value> 
		</list> 
		</property>
	    
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<!--<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>-->
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.cache.configurationResourceName">ehcache.xml</prop>
			</props>
		</property>

	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
